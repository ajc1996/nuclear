<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nuclear.dao.UserNuMapper" >
  <resultMap id="BaseResultMap" type="nuclear.model.UserNu" >
    <constructor >
      <idArg column="uid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="uname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="upassword" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="upic" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="usex" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="ubirthday" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="ulimits" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="uphone" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, uname, upassword, upic, usex, ubirthday, ulimits, uphone
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="nuclear.model.UserNuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from n_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from n_user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from n_user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="nuclear.model.UserNuExample" >
    delete from n_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="nuclear.model.UserNu" >
    insert into n_user (uid, uname, upassword, 
      upic, usex, ubirthday, ulimits, 
      uphone)
    values (#{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, 
      #{upic,jdbcType=VARCHAR}, #{usex,jdbcType=CHAR}, #{ubirthday,jdbcType=DATE}, #{ulimits,jdbcType=INTEGER}, 
      #{uphone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="nuclear.model.UserNu" >
    insert into n_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="upassword != null" >
        upassword,
      </if>
      <if test="upic != null" >
        upic,
      </if>
      <if test="usex != null" >
        usex,
      </if>
      <if test="ubirthday != null" >
        ubirthday,
      </if>
      <if test="ulimits != null" >
        ulimits,
      </if>
      <if test="uphone != null" >
        uphone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="upic != null" >
        #{upic,jdbcType=VARCHAR},
      </if>
      <if test="usex != null" >
        #{usex,jdbcType=CHAR},
      </if>
      <if test="ubirthday != null" >
        #{ubirthday,jdbcType=DATE},
      </if>
      <if test="ulimits != null" >
        #{ulimits,jdbcType=INTEGER},
      </if>
      <if test="uphone != null" >
        #{uphone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="nuclear.model.UserNuExample" resultType="java.lang.Integer" >
    select count(*) from n_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update n_user
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.uname != null" >
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null" >
        upassword = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.upic != null" >
        upic = #{record.upic,jdbcType=VARCHAR},
      </if>
      <if test="record.usex != null" >
        usex = #{record.usex,jdbcType=CHAR},
      </if>
      <if test="record.ubirthday != null" >
        ubirthday = #{record.ubirthday,jdbcType=DATE},
      </if>
      <if test="record.ulimits != null" >
        ulimits = #{record.ulimits,jdbcType=INTEGER},
      </if>
      <if test="record.uphone != null" >
        uphone = #{record.uphone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update n_user
    set uid = #{record.uid,jdbcType=INTEGER},
      uname = #{record.uname,jdbcType=VARCHAR},
      upassword = #{record.upassword,jdbcType=VARCHAR},
      upic = #{record.upic,jdbcType=VARCHAR},
      usex = #{record.usex,jdbcType=CHAR},
      ubirthday = #{record.ubirthday,jdbcType=DATE},
      ulimits = #{record.ulimits,jdbcType=INTEGER},
      uphone = #{record.uphone,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="nuclear.model.UserNu" >
    update n_user
    <set >
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        upassword = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="upic != null" >
        upic = #{upic,jdbcType=VARCHAR},
      </if>
      <if test="usex != null" >
        usex = #{usex,jdbcType=CHAR},
      </if>
      <if test="ubirthday != null" >
        ubirthday = #{ubirthday,jdbcType=DATE},
      </if>
      <if test="ulimits != null" >
        ulimits = #{ulimits,jdbcType=INTEGER},
      </if>
      <if test="uphone != null" >
        uphone = #{uphone,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="nuclear.model.UserNu" >
    update n_user
    set uname = #{uname,jdbcType=VARCHAR},
      upassword = #{upassword,jdbcType=VARCHAR},
      upic = #{upic,jdbcType=VARCHAR},
      usex = #{usex,jdbcType=CHAR},
      ubirthday = #{ubirthday,jdbcType=DATE},
      ulimits = #{ulimits,jdbcType=INTEGER},
      uphone = #{uphone,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>