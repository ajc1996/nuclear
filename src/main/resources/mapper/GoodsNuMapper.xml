<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nuclear.dao.GoodsNuMapper" >
  <resultMap id="BaseResultMap" type="nuclear.model.GoodsNu" >
    <constructor >
      <idArg column="gid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="gname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gprice" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="gintro" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gpic" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="grepertory" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="gbirthday" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    gid, gname, gprice, gintro, gpic, grepertory, gbirthday
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="nuclear.model.GoodsNuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from n_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from n_goods
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from n_goods
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="nuclear.model.GoodsNuExample" >
    delete from n_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="nuclear.model.GoodsNu" >
    insert into n_goods (gid, gname, gprice, 
      gintro, gpic, grepertory, 
      gbirthday)
    values (#{gid,jdbcType=INTEGER}, #{gname,jdbcType=VARCHAR}, #{gprice,jdbcType=DOUBLE}, 
      #{gintro,jdbcType=VARCHAR}, #{gpic,jdbcType=VARCHAR}, #{grepertory,jdbcType=INTEGER}, 
      #{gbirthday,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="nuclear.model.GoodsNu" >
    insert into n_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gid != null" >
        gid,
      </if>
      <if test="gname != null" >
        gname,
      </if>
      <if test="gprice != null" >
        gprice,
      </if>
      <if test="gintro != null" >
        gintro,
      </if>
      <if test="gpic != null" >
        gpic,
      </if>
      <if test="grepertory != null" >
        grepertory,
      </if>
      <if test="gbirthday != null" >
        gbirthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gid != null" >
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="gname != null" >
        #{gname,jdbcType=VARCHAR},
      </if>
      <if test="gprice != null" >
        #{gprice,jdbcType=DOUBLE},
      </if>
      <if test="gintro != null" >
        #{gintro,jdbcType=VARCHAR},
      </if>
      <if test="gpic != null" >
        #{gpic,jdbcType=VARCHAR},
      </if>
      <if test="grepertory != null" >
        #{grepertory,jdbcType=INTEGER},
      </if>
      <if test="gbirthday != null" >
        #{gbirthday,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="nuclear.model.GoodsNuExample" resultType="java.lang.Integer" >
    select count(*) from n_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update n_goods
    <set >
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.gname != null" >
        gname = #{record.gname,jdbcType=VARCHAR},
      </if>
      <if test="record.gprice != null" >
        gprice = #{record.gprice,jdbcType=DOUBLE},
      </if>
      <if test="record.gintro != null" >
        gintro = #{record.gintro,jdbcType=VARCHAR},
      </if>
      <if test="record.gpic != null" >
        gpic = #{record.gpic,jdbcType=VARCHAR},
      </if>
      <if test="record.grepertory != null" >
        grepertory = #{record.grepertory,jdbcType=INTEGER},
      </if>
      <if test="record.gbirthday != null" >
        gbirthday = #{record.gbirthday,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update n_goods
    set gid = #{record.gid,jdbcType=INTEGER},
      gname = #{record.gname,jdbcType=VARCHAR},
      gprice = #{record.gprice,jdbcType=DOUBLE},
      gintro = #{record.gintro,jdbcType=VARCHAR},
      gpic = #{record.gpic,jdbcType=VARCHAR},
      grepertory = #{record.grepertory,jdbcType=INTEGER},
      gbirthday = #{record.gbirthday,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="nuclear.model.GoodsNu" >
    update n_goods
    <set >
      <if test="gname != null" >
        gname = #{gname,jdbcType=VARCHAR},
      </if>
      <if test="gprice != null" >
        gprice = #{gprice,jdbcType=DOUBLE},
      </if>
      <if test="gintro != null" >
        gintro = #{gintro,jdbcType=VARCHAR},
      </if>
      <if test="gpic != null" >
        gpic = #{gpic,jdbcType=VARCHAR},
      </if>
      <if test="grepertory != null" >
        grepertory = #{grepertory,jdbcType=INTEGER},
      </if>
      <if test="gbirthday != null" >
        gbirthday = #{gbirthday,jdbcType=TIMESTAMP},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="nuclear.model.GoodsNu" >
    update n_goods
    set gname = #{gname,jdbcType=VARCHAR},
      gprice = #{gprice,jdbcType=DOUBLE},
      gintro = #{gintro,jdbcType=VARCHAR},
      gpic = #{gpic,jdbcType=VARCHAR},
      grepertory = #{grepertory,jdbcType=INTEGER},
      gbirthday = #{gbirthday,jdbcType=TIMESTAMP}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>